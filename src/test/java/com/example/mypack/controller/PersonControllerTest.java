package com.example.mypack.controller;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.doNothing;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.multipart;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.put;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import com.example.mypack.exception.ObjectNotFoundException;
import com.example.mypack.model.Person;
import com.example.mypack.service.PersonService;
import com.fasterxml.jackson.databind.ObjectMapper;

@WebMvcTest(PersonController.class)
public class PersonControllerTest {

	@InjectMocks
	private PersonController personController;

	@Autowired
	private MockMvc mockMvc;

	@MockBean
	private PersonService personService;

	private static final ObjectMapper mapper = new ObjectMapper();

	@Test
	public void addPersonTest() {
		String payload = "{\r\n" + "    \"personId\": \"FF-38\",\r\n" + "    \"firstName\": \"Amanpreet\",\r\n"
				+ "    \"lastName\": \"singh\",\r\n" + "    \"email\": \"abc@gmail.com\",\r\n"
				+ "    \"mobile\": \"+919335302631\",\r\n" + "    \"weight\": 0.1,\r\n" + "    \"height\": 0.1,\r\n"
				+ "    \"bmi\": 0.1,\r\n" + "    \"bmiResult\": \"Not Good\",\r\n" + "    \"gender\": \"Male\",\r\n"
				+ "    \"isTrainerRequire\": \"Yes\",\r\n" + "    \"trainingPackage\": \"Monthly\",\r\n"
				+ "    \"motivations\": [\r\n" + "        \"Burn Fat\",\r\n" + "        \"Reduce weight\"\r\n"
				+ "    ],\r\n" + "    \"hasBeenToGym\": \"Yes\",\r\n" + "    \"enquiryDate\": \"2024-05-02\",\r\n"
				+ "    \"age\": 20,\r\n" + "    \"imageData\": {\r\n" + "        \"name\": \"Iphone.jpg\",\r\n"
				+ "        \"type\": \"image/jpeg\",\r\n"
				+ "        \"imageData\": \"\"\r\n"
				+ "    },\r\n" + "    \"referFrom\": \"Advertisment\"\r\n" + "}";

		try {
			Person person = mapper.readValue(payload, Person.class);
			MockMultipartFile file = new MockMultipartFile("file", "filename.jpg", "image/jpeg",
					"file content".getBytes());
			Mockito.when(personService.addPerson(Mockito.any(Person.class), Mockito.any(MockMultipartFile.class)))
					.thenReturn(person);
			MockMultipartFile personJson = new MockMultipartFile("person", mapper.writeValueAsString(person),
					"application/json", mapper.writeValueAsString(person).getBytes());
			ResultActions response = mockMvc.perform(multipart("/v1/person").file(file).file(personJson))
					.andExpect(status().isCreated());
			response.andDo(print()).andExpect(status().isCreated())
					.andExpect(jsonPath("$.firstName", is(person.getFirstName())))
					.andExpect(jsonPath("$.lastName", is(person.getLastName())))
					.andExpect(jsonPath("$.email", is(person.getEmail())));
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Test
	public void getAllPersonTest() {
		String payload = "{\r\n" + "    \"personId\": \"FF-38\",\r\n" + "    \"firstName\": \"Amanpreet\",\r\n"
				+ "    \"lastName\": \"singh\",\r\n" + "    \"email\": \"abc@gmail.com\",\r\n"
				+ "    \"mobile\": \"+919335302631\",\r\n" + "    \"weight\": 0.1,\r\n" + "    \"height\": 0.1,\r\n"
				+ "    \"bmi\": 0.1,\r\n" + "    \"bmiResult\": \"Not Good\",\r\n" + "    \"gender\": \"Male\",\r\n"
				+ "    \"isTrainerRequire\": \"Yes\",\r\n" + "    \"trainingPackage\": \"Monthly\",\r\n"
				+ "    \"motivations\": [\r\n" + "        \"Burn Fat\",\r\n" + "        \"Reduce weight\"\r\n"
				+ "    ],\r\n" + "    \"hasBeenToGym\": \"Yes\",\r\n" + "    \"enquiryDate\": \"2024-05-02\",\r\n"
				+ "    \"age\": 20,\r\n" + "    \"imageData\": {\r\n" + "        \"name\": \"Iphone.jpg\",\r\n"
				+ "        \"type\": \"image/jpeg\",\r\n"
				+ "        \"imageData\": \"\"\r\n"
				+ "    },\r\n" + "    \"referFrom\": \"Advertisment\"\r\n" + "}";
		try {
			List<Person> persons = new ArrayList<>();
			Person person = mapper.readValue(payload, Person.class);
			persons.add(person);
			Mockito.when(personService.getAllPerson()).thenReturn(persons);
			ResultActions response = mockMvc.perform(get("/v1/person"));
			response.andExpect(status().isOk()).andDo(print()).andExpect(jsonPath("$.size()", is(persons.size())));

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Test
	public void getPersonByIdTest() {
		String personId = "FF37";
		String payload = "{\r\n" + "    \"personId\": \"FF37\",\r\n" + "    \"firstName\": \"Amanpreet\",\r\n"
				+ "    \"lastName\": \"singh\",\r\n" + "    \"email\": \"abc@gmail.com\",\r\n"
				+ "    \"mobile\": \"+919335302631\",\r\n" + "    \"weight\": 0.1,\r\n" + "    \"height\": 0.1,\r\n"
				+ "    \"bmi\": 0.1,\r\n" + "    \"bmiResult\": \"Not Good\",\r\n" + "    \"gender\": \"Male\",\r\n"
				+ "    \"isTrainerRequire\": \"Yes\",\r\n" + "    \"trainingPackage\": \"Monthly\",\r\n"
				+ "    \"motivations\": [\r\n" + "        \"Burn Fat\",\r\n" + "        \"Reduce weight\"\r\n"
				+ "    ],\r\n" + "    \"hasBeenToGym\": \"Yes\",\r\n" + "    \"enquiryDate\": \"2024-05-02\",\r\n"
				+ "    \"age\": 20,\r\n" + "    \"imageData\": {\r\n" + "        \"name\": \"Iphone.jpg\",\r\n"
				+ "        \"type\": \"image/jpeg\",\r\n"
				+ "        \"imageData\": \"\"\r\n"
				+ "    },\r\n" + "    \"referFrom\": \"Advertisment\"\r\n" + "}";

		try {
			Person person = mapper.readValue(payload, Person.class);
			Mockito.when(personService.getPersonById(anyString())).thenReturn(person);
			ResultActions response = mockMvc.perform(get("/v1/person/{personId}", personId));
			response.andExpect(status().isOk()).andDo(print())
					.andExpect(jsonPath("$.personId", is(person.getPersonId())));

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test
	public void getPersonByIdObjectNotFoundTest() {
		String personId = "FF1345";
		String expected = "Object Not Found for given Id : FF1345";
		try {
			Mockito.when(personService.getPersonById(anyString()))
					.thenThrow(new ObjectNotFoundException("Object Not Found for given Id : FF1345"));
			MvcResult response = mockMvc.perform(get("/v1/person/{personId}", personId)).andDo(print()).andReturn();
			assertEquals(expected, response.getResolvedException().getMessage());

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test
	public void updatePersonTest() {
		String payload = "{\r\n" + "    \"personId\": \"FF-38\",\r\n" + "    \"firstName\": \"Amanpreet\",\r\n"
				+ "    \"lastName\": \"singh\",\r\n" + "    \"email\": \"abc@gmail.com\",\r\n"
				+ "    \"mobile\": \"+919335302631\",\r\n" + "    \"weight\": 0.1,\r\n" + "    \"height\": 0.1,\r\n"
				+ "    \"bmi\": 0.1,\r\n" + "    \"bmiResult\": \"Not Good\",\r\n" + "    \"gender\": \"Male\",\r\n"
				+ "    \"isTrainerRequire\": \"Yes\",\r\n" + "    \"trainingPackage\": \"Monthly\",\r\n"
				+ "    \"motivations\": [\r\n" + "        \"Burn Fat\",\r\n" + "        \"Reduce weight\"\r\n"
				+ "    ],\r\n" + "    \"hasBeenToGym\": \"Yes\",\r\n" + "    \"enquiryDate\": \"2024-05-02\",\r\n"
				+ "    \"age\": 20,\r\n" + "    \"imageData\": {\r\n" + "        \"name\": \"Iphone.jpg\",\r\n"
				+ "        \"type\": \"image/jpeg\",\r\n"
				+ "        \"imageData\": \"\"\r\n"
				+ "    },\r\n" + "    \"referFrom\": \"Advertisment\"\r\n" + "}";
		try {
			Person person = mapper.readValue(payload, Person.class);
			Mockito.when(personService.updatePerson(Mockito.any(Person.class))).thenReturn(person);
			ResultActions response = mockMvc.perform(MockMvcRequestBuilders.put("/v1/person")
					.contentType(MediaType.APPLICATION_JSON).content(mapper.writeValueAsString(person)));
			response.andDo(print()).andExpect(status().isOk())
					.andExpect(jsonPath("$.firstName", is(person.getFirstName())))
					.andExpect(jsonPath("$.lastName", is(person.getLastName())))
					.andExpect(jsonPath("$.email", is(person.getEmail())));

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Test
	public void deletePersonTest() {
		String payload = "{\r\n" + "    \"personId\": \"FF-38\",\r\n" + "    \"firstName\": \"Amanpreet\",\r\n"
				+ "    \"lastName\": \"singh\",\r\n" + "    \"email\": \"abc@gmail.com\",\r\n"
				+ "    \"mobile\": \"+919335302631\",\r\n" + "    \"weight\": 0.1,\r\n" + "    \"height\": 0.1,\r\n"
				+ "    \"bmi\": 0.1,\r\n" + "    \"bmiResult\": \"Not Good\",\r\n" + "    \"gender\": \"Male\",\r\n"
				+ "    \"isTrainerRequire\": \"Yes\",\r\n" + "    \"trainingPackage\": \"Monthly\",\r\n"
				+ "    \"motivations\": [\r\n" + "        \"Burn Fat\",\r\n" + "        \"Reduce weight\"\r\n"
				+ "    ],\r\n" + "    \"hasBeenToGym\": \"Yes\",\r\n" + "    \"enquiryDate\": \"2024-05-02\",\r\n"
				+ "    \"age\": 20,\r\n" + "    \"imageData\": {\r\n" + "        \"name\": \"Iphone.jpg\",\r\n"
				+ "        \"type\": \"image/jpeg\",\r\n"
				+ "        \"imageData\": \"\"\r\n"
				+ "    },\r\n" + "    \"referFrom\": \"Advertisment\"\r\n" + "}";

		try {
			Person person = mapper.readValue(payload, Person.class);
			doNothing().when(personService).deletePerson(person);
			ResultActions response = mockMvc.perform(MockMvcRequestBuilders.delete("/v1/person")
					.contentType(MediaType.APPLICATION_JSON).content(mapper.writeValueAsString(person)));
			response.andExpect(status().isOk()).andDo(print());
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Test
	public void deletePersonByIdTest() {
		String personId = "FF-1";
		try {
			doNothing().when(personService).deletePersonById(personId);
			ResultActions response = mockMvc.perform(MockMvcRequestBuilders.delete("/v1/person/{personId}", personId));
			response.andDo(print()).andExpect(status().isOk());

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Test
	public void updatePersonWithMultipartTest() {
		String payload = "{\r\n" + "    \"personId\": \"FF-38\",\r\n" + "    \"firstName\": \"Amanpreet\",\r\n"
				+ "    \"lastName\": \"singh\",\r\n" + "    \"email\": \"abc@gmail.com\",\r\n"
				+ "    \"mobile\": \"+919335302631\",\r\n" + "    \"weight\": 0.1,\r\n" + "    \"height\": 0.1,\r\n"
				+ "    \"bmi\": 0.1,\r\n" + "    \"bmiResult\": \"Not Good\",\r\n" + "    \"gender\": \"Male\",\r\n"
				+ "    \"isTrainerRequire\": \"Yes\",\r\n" + "    \"trainingPackage\": \"Monthly\",\r\n"
				+ "    \"motivations\": [\r\n" + "        \"Burn Fat\",\r\n" + "        \"Reduce weight\"\r\n"
				+ "    ],\r\n" + "    \"hasBeenToGym\": \"Yes\",\r\n" + "    \"enquiryDate\": \"2024-05-02\",\r\n"
				+ "    \"age\": 20,\r\n" + "    \"imageData\": {\r\n" + "        \"name\": \"Iphone.jpg\",\r\n"
				+ "        \"type\": \"image/jpeg\",\r\n"
				+ "        \"imageData\": \"\"\r\n"
				+ "    },\r\n" + "    \"referFrom\": \"Advertisment\"\r\n" + "}";

		try {
			Person person = mapper.readValue(payload, Person.class);
			MockMultipartFile file = new MockMultipartFile("file", "filename.jpg", "image/jpeg",
					"file content".getBytes());
			Mockito.when(personService.update(Mockito.any(Person.class), Mockito.any(MockMultipartFile.class)))
					.thenReturn(person);
			ResultActions response = mockMvc
					.perform(put("/v1/person").contentType(MediaType.MULTIPART_FORM_DATA).content(file.getBytes())
							.contentType(MediaType.APPLICATION_JSON_VALUE).content(mapper.writeValueAsString(person)))
					.andExpect(status().isOk());
			response.andDo(print()).andExpect(status().isOk());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
